{"version":3,"sources":["store/actions.js","JoinRoomPage/JoinRoomInputs.js","store/reducer.js","store/store.js","utils/twilioUtils.js","JoinRoomPage/JoinRoomContent.js","resources/images/chat.svg","resources/images/join3.svg","resources/images/join4.svg","JoinRoomPage/JoinRoomPage.js","RoomPage/ParticipantsSection/Participants.js","RoomPage/ParticipantsSection/ParticipantsSection.js","RoomPage/VideoSection/VideoDock/Tooltip.js","RoomPage/VideoSection/VideoDock/MicButton.js","RoomPage/VideoSection/VideoDock/CameraButton.js","RoomPage/VideoSection/VideoDock/LeaveRoomButton.js","RoomPage/VideoSection/VideoDock/ScreenSharePreview.js","RoomPage/VideoSection/VideoDock/SwitchToScreenSharingButton.js","RoomPage/VideoSection/VideoDock/ShareLinkButton.js","RoomPage/VideoSection/VideoDock/VideoButtons.js","RoomPage/VideoSection/TwilioRoom/AudioTrack.js","RoomPage/VideoSection/TwilioRoom/VideoTrack.js","RoomPage/VideoSection/TwilioRoom/Participant.js","RoomPage/VideoSection/TwilioRoom/TwilioRoom.js","RoomPage/VideoSection/Videos.js","RoomPage/VideoSection/VideoSection.js","RoomPage/ChatSection/Messages.js","resources/images/sendMessageButton.svg","RoomPage/ChatSection/NewMessage.js","RoomPage/ChatSection/ChatSection.js","RoomPage/RoomPageMobile.js","RoomPage/RoomPageLarge.js","RoomPage/Overlay.js","RoomPage/RoomPage.js","IntroductionPage/HomeButtons.js","resources/images/home6.svg","resources/images/home5.svg","IntroductionPage/IntroductionPage.js","resources/images/home7.svg","ChannelPage/firebase.js","resources/images/login3.svg","ChannelPage/login/Login.js","ChannelPage/sidebar/SidebarChat.js","ChannelPage/sidebar/Sidebar.js","ChannelPage/chat/Message.js","ChannelPage/chat/Chat.js","ChannelPage/ChannelPage.js","App.js","serviceWorker.js","index.js"],"names":["Actions","SET_IS_ROOM_HOST","SET_IDENTITY","SET_ROOM_ID","SET_TWILIO_ACCESS_TOKEN","SET_SHOW_OVERLAY","SET_PARTICIPANTS","SET_MESSAGES","SET_USER","SET_CHATID","SET_CHATNAME","SET_PAGE","setIdentity","identity","type","setIsRoomHost","isRoomHost","setRoomId","roomId","setTwilioAccessToken","token","setShowOverlay","showOverlay","setParticipants","participants","setChatId","chatId","setChatName","chatName","setPage","page","JoinRoomInputs","props","nameValue","setNameValue","roomIdValue","setRoomIdValue","Grid","container","id","alignItems","justify","placeholder","value","onChange","event","target","initState","twilioAccessToken","messages","user","reducer","state","action","store","configureStore","audioConstraints","video","audio","videoConstraints","width","height","dataChannel","getTokenFromTwilio","setAccessToken","a","randomId","uuidv4","axios","get","response","data","accessToken","connectToRoom","setRoom","onlyWithAudio","getState","connectOnlyWithAudio","constraints","navigator","mediaDevices","getUserMedia","then","stream","audioTrack","LocalAudioTrack","getAudioTracks","dataTrack","LocalDataTrack","tracks","videoTrack","LocalVideoTrack","getVideoTracks","connect","name","room","console","log","dispatch","catch","err","checkIfRoomExists","roomExists","addMessageToMessenger","message","push","sendMessageUsingDataChannel","content","messageCreatedByMe","ownMessage","messageToSent","MESSAGE","JSON","stringify","send","setIdentityAction","setRoomIdAction","useState","JoinClicked","setJoinClicked","history","useHistory","handleJoinToRoom","length","alert","Buttons","item","xs","LinearProgress","Button","onClick","disabled","goBack","direction","md","style","borderRadius","setIsRoomHostAction","search","useLocation","useEffect","URLSearchParams","titleText","Images","Hidden","smDown","src","chat","join4","mdUp","join3","Content","Person","Name","slice","map","person","index","ParticipantsSection","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","Tooltip","MicButton","isMicMuted","setIsMicMuted","mute","localParticipant","audioTracks","forEach","localAudioTrackPublication","track","disable","unmute","enable","mic_class","title","class","CameraButton","isCameraOff","setisCameraOff","startVideo","videoTracks","stopVideo","cameraON","cameraOFF","LeaveRoomButton","disconnect","siteUrl","window","location","origin","href","LocalScreenSharingPreview","localPreviewRef","useRef","current","srcObject","onloadedmetadata","play","muted","autoPlay","ref","SwitchToScreenSharingButton","isActive","setIsActive","screenShareTrack","setScreenShareTrack","screenShareStream","setScreenShareStream","stop","unpublishTrack","getDisplayMedia","screenTrack","publishTrack","onended","toast","configure","ShareLinkButton","notif","setNotif","timeout","ms","Promise","resolve","setTimeout","notify","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","text","String","isSmall","screen","outerWidth","hidden","AudioTrack","trackRef","child","attach","classList","add","kind","appendChild","className","windowWidth","VideoTrack","large","count","medium","small","setwidth","videosPortal","document","getElementById","contains","ReactDOM","createPortal","Participant","nonNullTracks","Array","from","participant","values","publication","filter","this","on","parse","addTrack","removeTrack","setState","newTracks","t","trackName","userID","Component","str","TwilioRoom","remoteParticipants","addParticipantToStore","addParticipant","removeParticipant","find","p","newParticipants","removeParticipantFromStore","VideoSection","Message","author","sameAuthor","authorText","MessageBubble","element","scrollTop","scrollHeight","NewMessage","setMessage","sendMessage","onKeyDown","key","preventDefault","SendMessageButton","ChatSection","wid","mobile","RoomPageMobile","NavBar","RoomPageLarge","Overlay","setTwilioAccessTokenAction","HomeButtons","Path","next","home6","home5","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","Login","signin","signInWithPopup","error","login3","Title","setChatIdAction","setChatNameAction","setPageAction","chatInfo","setChatInfo","collection","doc","orderBy","onSnapshot","snapshot","docs","displayName","chats","setChats","rooms","setrooms","open","setOpen","opened","setOpened","channel","setChannel","password","setPassword","email","signOut","Avatar","photo","e","Collapse","in","added","x","host","joined","forwardRef","contents","timestamp","uid","show","setShow","showdetail","hiddenDetails","Date","toDate","toLocaleString","temp","update","chatRef","input","setInput","setMessages","FieldValue","serverTimestamp","to","rel","setUserAction","setUser","onAuthStateChanged","authUser","photoURL","App","setTheme","Fab","path","Boolean","hostname","match","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04346174.chunk.js","sourcesContent":["const Actions = {\r\n  SET_IS_ROOM_HOST: \"SET_IS_ROOM_HOST\",\r\n  SET_IDENTITY: \"SET_IDENTITY\",\r\n  SET_ROOM_ID: \"SET_ROOM_ID\",\r\n  SET_TWILIO_ACCESS_TOKEN: \"SET_TWILIO_ACCESS_TOKEN\",\r\n  SET_SHOW_OVERLAY: \"SET_SHOW_OVERLAY\",\r\n  SET_PARTICIPANTS: \"SET_PARTICIPANTS\",\r\n  SET_MESSAGES: \"SET_MESSAGES\",\r\n  SET_USER: \"SET_USER\",\r\n  SET_CHATID: \"SET_CHATID\",\r\n  SET_CHATNAME: \"SET_CHATNAME\",\r\n  SET_PAGE: \"SET_PAGE\",\r\n};\r\n\r\nexport const setIdentity = (identity) => {\r\n  return {\r\n    type: Actions.SET_IDENTITY,\r\n    identity,\r\n  };\r\n};\r\n\r\nexport const setIsRoomHost = (isRoomHost) => {\r\n  return {\r\n    type: Actions.SET_IS_ROOM_HOST,\r\n    isRoomHost,\r\n  };\r\n};\r\n\r\n\r\nexport const setRoomId = (roomId) => {\r\n  return {\r\n    type: Actions.SET_ROOM_ID,\r\n    roomId,\r\n  };\r\n};\r\n\r\nexport const setTwilioAccessToken = (token) => {\r\n  return {\r\n    type: Actions.SET_TWILIO_ACCESS_TOKEN,\r\n    token,\r\n  };\r\n};\r\n\r\nexport const setShowOverlay = (showOverlay) => {\r\n  return {\r\n    type: Actions.SET_SHOW_OVERLAY,\r\n    showOverlay,\r\n  };\r\n};\r\n\r\nexport const setParticipants = (participants) => {\r\n  return {\r\n    type: Actions.SET_PARTICIPANTS,\r\n    participants,\r\n  };\r\n};\r\n\r\nexport const setMessages = (messages)=>{\r\n  return{\r\n    type: Actions.SET_MESSAGES,\r\n    messages,\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return{\r\n    type: Actions.SET_USER,\r\n    user,\r\n  }\r\n}\r\n\r\nexport const setChatId = (chatId) =>{\r\n  return{\r\n    type: Actions.SET_CHATID,\r\n    chatId,\r\n  }\r\n}\r\n\r\nexport const setChatName = (chatName) =>{\r\n  return{\r\n    type: Actions.SET_CHATNAME,\r\n    chatName,\r\n  }\r\n}\r\n\r\nexport const setPage = (page) =>{\r\n  return{\r\n    type: Actions.SET_PAGE,\r\n    page,\r\n  }\r\n}\r\n\r\nexport default Actions;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst JoinRoomInputs = (props) => {\r\n\tconst { nameValue, setNameValue, roomIdValue, setRoomIdValue, isRoomHost } =\r\n\t\tprops;\r\n\r\n\tconst handleRoomID = (event) => {\r\n\t\tsetRoomIdValue(event.target.value);\r\n\t};\r\n\r\n\tconst handleName = (event) => {\r\n\t\tsetNameValue(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tid=\"input_container\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t{!isRoomHost && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"room_input\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Meeting ID\"\r\n\t\t\t\t\t\t\t\tvalue={roomIdValue}\r\n\t\t\t\t\t\t\t\tonChange={handleRoomID}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"name_input\"\r\n\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\tvalue={nameValue}\r\n\t\t\t\t\t\tonChange={handleName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default JoinRoomInputs;\r\n","import Actions from \"./actions\";\r\n\r\nconst initState = {\r\n  identity: \"\",\r\n  isRoomHost: false,\r\n  roomId: null,\r\n  twilioAccessToken: null,\r\n  showOverlay: true,\r\n  participants: [],\r\n  messages: [],\r\n  user:\"\",\r\n  chatId: \"\",\r\n  chatName: \"\",\r\n  page:false,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case Actions.SET_IDENTITY:\r\n      return {\r\n        ...state,\r\n        identity: action.identity,\r\n      };\r\n    case Actions.SET_IS_ROOM_HOST:\r\n      return {\r\n        ...state,\r\n        isRoomHost: action.isRoomHost,\r\n      };\r\n    case Actions.SET_ROOM_ID:\r\n      return {\r\n        ...state,\r\n        roomId: action.roomId,\r\n      };\r\n    case Actions.SET_TWILIO_ACCESS_TOKEN:\r\n      return {\r\n        ...state,\r\n        twilioAccessToken: action.token,\r\n      };\r\n    case Actions.SET_SHOW_OVERLAY:\r\n      return {\r\n        ...state,\r\n        showOverlay: action.showOverlay,\r\n      };\r\n    case Actions.SET_PARTICIPANTS:\r\n      return {\r\n        ...state,\r\n        participants: action.participants,\r\n      };\r\n    case Actions.SET_MESSAGES :\r\n      return{\r\n        ...state,\r\n        messages: action.messages,\r\n      }\r\n    case Actions.SET_USER :\r\n      return{\r\n        ...state,\r\n        user: action.user,\r\n      }\r\n    case Actions.SET_CHATID :\r\n      return{\r\n        ...state,\r\n        chatId: action.chatId,\r\n      }\r\n    case Actions.SET_CHATNAME :\r\n      return{\r\n        ...state,\r\n        chatName: action.chatName,\r\n      }\r\n    case Actions.SET_PAGE :\r\n      return{\r\n        ...state,\r\n        page: action.page\r\n      }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\nexport const store = configureStore({\r\n  reducer:reducer,\r\n});\r\n","import axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { store } from \"../store/store\";\r\nimport {setMessages} from \"../store/actions\"\r\nimport {\r\n  connect,\r\n  LocalAudioTrack,\r\n  LocalDataTrack,\r\n  LocalVideoTrack,\r\n} from \"twilio-video\";\r\nimport { setShowOverlay } from \"../store/actions\";\r\n\r\nconst audioConstraints = {\r\n  video: false,\r\n  audio: true,\r\n};\r\n\r\nconst videoConstraints = {\r\n  audio: true,\r\n  video: {\r\n    width: 640,\r\n    height: 480,\r\n  },\r\n};\r\n\r\nlet dataChannel = null;\r\n\r\nexport const getTokenFromTwilio = async (setAccessToken, identity) => {\r\n  const randomId = uuidv4();\r\n\r\n  const response = await axios.get(\r\n    `https://teamscloneservice-7248-dev.twil.io/token-service?identity=${randomId}${identity}`\r\n  );\r\n\r\n  const data = response.data;\r\n\r\n  if (data.accessToken) {\r\n    setAccessToken(data.accessToken);\r\n  }\r\n};\r\n\r\nexport const connectToRoom = async (\r\n  accessToken,\r\n  roomId = \"test-room\",\r\n  setRoom\r\n) => {\r\n  const onlyWithAudio = store.getState().connectOnlyWithAudio;\r\n  const constraints = onlyWithAudio ? audioConstraints : videoConstraints;\r\n\r\n  navigator.mediaDevices\r\n    .getUserMedia(constraints)\r\n    .then(async (stream) => {\r\n      let tracks;\r\n\r\n      // create data track for messages\r\n      const audioTrack = new LocalAudioTrack(stream.getAudioTracks()[0]);\r\n      const dataTrack = new LocalDataTrack();\r\n      dataChannel = dataTrack;\r\n\r\n      let videoTrack;\r\n\r\n      if (!onlyWithAudio) {\r\n        videoTrack = new LocalVideoTrack(stream.getVideoTracks()[0]);\r\n        tracks = [audioTrack, videoTrack , dataTrack];\r\n      } else {\r\n        tracks = [audioTrack , dataTrack];\r\n      }\r\n\r\n      const room = await connect(accessToken, {\r\n        name: roomId,\r\n        tracks,\r\n      });\r\n      console.log(\"succesfully connected with twilio room\");\r\n      console.log(room);\r\n      setRoom(room);\r\n      store.dispatch(setShowOverlay(false));\r\n    })\r\n    .catch((err) => {\r\n      console.log(\r\n        \"Error occurred when trying to get an access to local devices\"\r\n      );\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const checkIfRoomExists = async (roomId) => {\r\n  const response = await axios.get(\r\n    `https://teamscloneservice-7248-dev.twil.io/room-exists?roomId=${roomId}`\r\n  );\r\n\r\n  return response.data.roomExists;\r\n};\r\n\r\n\r\n//Data Channel Section.     \r\n\r\nexport const addMessageToMessenger = (message) =>{\r\n  const data = [...store.getState().messages]\r\n  data.push(message);\r\n  store.dispatch(setMessages(data))\r\n}\r\n\r\nexport const sendMessageUsingDataChannel = (\r\n  content,\r\n  messageCreatedByMe = false)=>{\r\n  const identity = store.getState().identity;\r\n  const ownMessage = {\r\n    identity ,\r\n    content ,\r\n    messageCreatedByMe\r\n  }\r\n\r\n  addMessageToMessenger(ownMessage);\r\n\r\n  const messageToSent = {\r\n    identity,\r\n    content\r\n  }\r\n\r\n  const MESSAGE = JSON.stringify(messageToSent);\r\n  dataChannel.send(MESSAGE);\r\n}\r\n\r\n\r\n","import React, { useState , useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport JoinRoomInputs from \"./JoinRoomInputs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { checkIfRoomExists } from \"../utils/twilioUtils\";\r\nimport {\r\n\tsetIdentity,\r\n\tsetRoomId,\r\n} from \"../store/actions\";\r\nimport { Button, LinearProgress, Grid } from \"@material-ui/core\";\r\n\r\nconst JoinRoomContent = (props) => {\r\n\t//State definitions.\r\n\tconst { isRoomHost, setRoomIdAction, setIdentityAction } = props;\r\n\r\n\tconst [roomIdValue, setRoomIdValue] = useState(\"\");\r\n\tconst [nameValue, setNameValue] = useState(\"\");\r\n\tconst [JoinClicked, setJoinClicked] = useState(false);\r\n\tconst history = useHistory();\r\n\r\n\r\n\t//Function to handle Join/Host room input feild event.\r\n\tconst handleJoinToRoom = async () => {\r\n\t\tif (nameValue.length === 0) {\r\n\t\t\talert(\"Name feild cant be empty\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetIdentityAction(nameValue);\r\n\t\tif (!isRoomHost) {\r\n\t\t\tif (roomIdValue.length === 0) {\r\n\t\t\t\talert(\"Room ID cant be empty\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetJoinClicked(true);\r\n\t\t\tconst roomExists = await checkIfRoomExists(roomIdValue);\r\n\t\t\tsetJoinClicked(false);\r\n\r\n\t\t\tif (roomExists) {\r\n\t\t\t\tsetRoomIdAction(roomIdValue);\r\n\t\t\t\thistory.push(\"/room\");\r\n\t\t\t} else {\r\n\t\t\t\talert(\"Invalid Room ID , Try again with a proper one\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetRoomIdAction(uuidv4());\r\n\t\t\thistory.push(\"/room\");\r\n\t\t}\r\n\t};\r\n\r\n\t//Function to handle the button events\r\n\tconst Buttons = () => {\r\n\t\treturn (\r\n\t\t\t<div id=\"button_container\">\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<LinearProgress />\r\n\t\t\t\t\t<Button id=\"bt1\" onClick={handleJoinToRoom}>\r\n\t\t\t\t\t\t{isRoomHost ? \"Host\" : \"Join\"}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tid=\"bt2\"\r\n\t\t\t\t\t\tdisabled={JoinClicked}\r\n\t\t\t\t\t\tonClick={() => history.goBack()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container xs={12} direction=\"row\">\r\n\t\t\t\t<Grid item xs={1} md={4}></Grid>\r\n\r\n\t\t\t\t<Grid item xs={10} md={4} id=\"content\">\r\n\t\t\t\t\t<JoinRoomInputs\r\n\t\t\t\t\t\troomIdValue={roomIdValue}\r\n\t\t\t\t\t\tsetRoomIdValue={setRoomIdValue}\r\n\t\t\t\t\t\tnameValue={nameValue}\r\n\t\t\t\t\t\tsetNameValue={setNameValue}\r\n\t\t\t\t\t\tisRoomHost={isRoomHost}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={1} md={4}></Grid>\r\n\t\t\t\t<Grid item xs={1} md={4}></Grid>\r\n\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={10}\r\n\t\t\t\t\tmd={4}\r\n\t\t\t\t\tid=\"content\"\r\n\t\t\t\t\tstyle={{ borderRadius: \"0px 0px 5px 5px\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Buttons />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n// redux states to handle state changes in identity and roomid\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetIdentityAction: (identity) => dispatch(setIdentity(identity)),\r\n\t\tsetRoomIdAction: (id) => dispatch(setRoomId(id)),\r\n\t};\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n\treturn {\r\n\t\t...state,\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStoreStateToProps,\r\n\tmapDispatchToProps\r\n)(JoinRoomContent);\r\n","export default __webpack_public_path__ + \"static/media/chat.a2176128.svg\";","export default __webpack_public_path__ + \"static/media/join3.f7286552.svg\";","export default __webpack_public_path__ + \"static/media/join4.4ffd8b51.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIsRoomHost } from \"../store/actions\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport JoinRoomContent from \"./JoinRoomContent\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\nimport \"../resources/css/JoinRoomPage.css\";\r\nimport chat from \"../resources/images/chat.svg\";\r\nimport join3 from \"../resources/images/join3.svg\";\r\nimport join4 from \"../resources/images/join4.svg\";\r\n\r\nconst JoinRoomPage = (props) => {\r\n  // extract isRoomHost detail from the website url suffix\r\n  const { setIsRoomHostAction, isRoomHost } = props;\r\n  const search = useLocation().search;\r\n\r\n  useEffect(() => {\r\n    const isRoomHost = new URLSearchParams(search).get(\"host\");\r\n    console.log(isRoomHost);\r\n    if (isRoomHost) {\r\n      setIsRoomHostAction(true);\r\n    }\r\n  }, []);\r\n\r\n  // render Join Host Page based on user choice.\r\n  const titleText = isRoomHost ? \"Host meeting\" : \"Join meeting\";\r\n\r\n  const Images = () => {\r\n    return (\r\n      <>\r\n        <Hidden smDown>\r\n          <img src={chat} id=\"img1\"></img>\r\n          <img src={join4} id=\"img2\"></img>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <img src={join3} id=\"img_mobile\"></img>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Content = () =>{\r\n    return(\r\n      <Grid container>\r\n      <Grid item xs={1} md={4}></Grid>\r\n      <Grid item xs={10} md={4} id=\"title_container\">\r\n        <div id=\"title\">{titleText}</div>\r\n      </Grid>\r\n      <Grid item xs={1} md={4}></Grid>\r\n      <Grid item xs={12}>\r\n        <JoinRoomContent />\r\n      </Grid>\r\n    </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div id=\"join-room-page\">\r\n      <Images/>\r\n      <Content/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// REDUX to update the isRoomHost state.\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setIsRoomHostAction: (isRoomHost) => dispatch(setIsRoomHost(isRoomHost)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(JoinRoomPage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\n//Obtain person Name from the unique identity string.\r\n//utility function to help retreive person name from unique ID\r\nconst Person = ({ identity }) => {\r\n\tlet Name = identity.slice(36, identity.length);\r\n\treturn <div id=\"participant_name\">{Name}</div>;\r\n};\r\n\r\n//participant block with header , count and array of participants.\r\nconst Participants = ({ participants }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div id=\"participant_count\">\r\n\t\t\t\tOther Participants : {participants.length}\r\n\t\t\t</div>\r\n\t\t\t{participants.map((person, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<FlipMove>\r\n\t\t\t\t\t\t<div id={index}>\r\n\t\t\t\t\t\t\t<Person\r\n\t\t\t\t\t\t\t\tkey={person.identity}\r\n\t\t\t\t\t\t\t\tidentity={person.identity}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FlipMove>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n\treturn {\r\n\t\t...state,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(Participants);\r\n","import React from \"react\";\r\nimport Participants from \"./Participants\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst ParticipantsSection = () => {\r\n  return (\r\n    <>\r\n      <Grid item xs={12} id=\"participant_header\">\r\n          Participants\r\n      </Grid>\r\n      <Grid item xs={12} id=\"participant_container\">\r\n        <Participants />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParticipantsSection;\r\n","import React, { useState } from \"react\";\r\nimport { \r\n  Grid, \r\n  Button,\r\n  makeStyles,\r\n  withStyles,\r\n  Tooltip \r\n} from \"@material-ui/core\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"max(12px,0.9vw)\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport {LightTooltip}","import React, { useState } from \"react\";\r\nimport {  \r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {LightTooltip} from \"./Tooltip\"\r\n\r\n\r\nconst MicButton = ({ room }) => {\r\n  //Mic states\r\n  const [isMicMuted, setIsMicMuted] = useState(false);\r\n  const handleMicButtonPressed = () => {\r\n    isMicMuted ? unmute() : mute();\r\n    setIsMicMuted(!isMicMuted);\r\n  };\r\n\r\n  //turn off the local audio track\r\n  const mute = () => {\r\n    room.localParticipant.audioTracks.forEach((localAudioTrackPublication) => {\r\n      localAudioTrackPublication.track.disable();\r\n    });\r\n  };\r\n\r\n  //turn on the local audio track\r\n  const unmute = () => {\r\n    room.localParticipant.audioTracks.forEach((localAudioTrackPublication) => {\r\n      localAudioTrackPublication.track.enable();\r\n    });\r\n  };\r\n\r\n  //microphone icon state.\r\n  let mic_class = isMicMuted ? \"fas fa-microphone-slash\" : \"fas fa-microphone\";\r\n  return (\r\n    <LightTooltip title=\"Turn On/Off your microphone\">\r\n      <Button onClick={handleMicButtonPressed} id=\"other_bt\">\r\n        <i class={mic_class}></i>\r\n      </Button>\r\n    </LightTooltip>\r\n  );\r\n};\r\n\r\nexport default MicButton;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LightTooltip } from \"./Tooltip\";\r\n\r\nconst CameraButton = ({ room }) => {\r\n  // Camera states and event handler\r\n  const [isCameraOff, setisCameraOff] = useState(false);\r\n  const handleCameraEvent = () => {\r\n    isCameraOff ? startVideo() : stopVideo();\r\n    setisCameraOff(!isCameraOff);\r\n  };\r\n\r\n  const startVideo = () => {\r\n    // start sending back video stream to other users\r\n    room.localParticipant.videoTracks.forEach((stream) => {\r\n      stream.track.enable();\r\n    });\r\n  };\r\n\r\n  const stopVideo = () => {\r\n    // stop sending camera stream to other users\r\n\r\n    room.localParticipant.videoTracks.forEach((stream) => {\r\n      //console.log(stream.track.name);\r\n      //Delete user video streams that are videos.\r\n      if (stream.track.name !== \"screen-share-track\") {\r\n        stream.track.disable();\r\n      }\r\n    });\r\n  };\r\n\r\n  //Camera icon states\r\n  let cameraON = <i class=\"fas fa-video\"></i>;\r\n  let cameraOFF = <i class=\"fas fa-video-slash\"></i>;\r\n  return (\r\n    <LightTooltip title=\"Turn On/Off your Camera\">\r\n      <Button id=\"other_bt\" onClick={handleCameraEvent}>\r\n        {!isCameraOff ? cameraON : cameraOFF}\r\n      </Button>\r\n    </LightTooltip>\r\n  );\r\n};\r\n\r\nexport default CameraButton;\r\n","import React  from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {LightTooltip} from \"./Tooltip\"\r\n\r\n\r\nconst LeaveRoomButton = ({ room }) => {\r\n\r\n  const handleLeaveEvent = () => {\r\n    room.disconnect();\r\n    //disconnect and go to Home\r\n    const siteUrl = window.location.origin;\r\n    window.location.href = siteUrl;\r\n  };\r\n\r\n  return (\r\n    <LightTooltip title=\"Leave Room\">\r\n      <Button onClick={handleLeaveEvent} id=\"leave_bt\">\r\n      <i class=\"fas fa-phone-slash\"></i>\r\n    </Button>\r\n    </LightTooltip>\r\n  );\r\n};\r\n\r\nexport default LeaveRoomButton;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nconst LocalScreenSharingPreview = ({ stream }) => {\r\n\r\n  const localPreviewRef = useRef();\r\n  useEffect(() => {\r\n    const video = localPreviewRef.current;\r\n    video.srcObject = stream;\r\n    video.onloadedmetadata = () => {\r\n      video.play();\r\n    };\r\n  }, [stream]);\r\n\r\n  return (\r\n    <div id=\"screen_share_preview\">\r\n      <video muted autoPlay ref={localPreviewRef}></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocalScreenSharingPreview;\r\n","import React, { useState } from \"react\";\r\nimport { LocalVideoTrack } from \"twilio-video\";\r\nimport LocalScreenSharingPreview from \"./ScreenSharePreview\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LightTooltip } from \"./Tooltip\";\r\n\r\n\r\nconst SwitchToScreenSharingButton = ({ room }) => {\r\n  //ScreenShare states\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [screenShareTrack, setScreenShareTrack] = useState(null);\r\n  const [screenShareStream, setScreenShareStream] = useState(null);\r\n\r\n  const handleScreenShareEvent = () => {\r\n    // handle screen sharing\r\n    if (!isActive) {\r\n      navigator.mediaDevices\r\n        .getDisplayMedia()\r\n        .then((stream) => {\r\n          setScreenShareStream(stream);\r\n          setIsActive(true);\r\n          const screenTrack = new LocalVideoTrack(stream.getVideoTracks()[0], {\r\n            name: \"screen-share-track\",\r\n          });\r\n\r\n          room.localParticipant.publishTrack(screenTrack);\r\n          setScreenShareTrack(screenTrack);\r\n\r\n          // Accept event from browser pop-up window.\r\n          stream.getVideoTracks()[0].onended = () => {\r\n            room.localParticipant.unpublishTrack(screenTrack);\r\n            setScreenShareTrack(null);\r\n            setIsActive(false);\r\n          };\r\n        })\r\n        .catch((err) => {\r\n          alert(\"cound not get an access to share screen\");\r\n          console.log(err);\r\n        });\r\n    } \r\n    else {\r\n      screenShareTrack.stop();\r\n      room.localParticipant.unpublishTrack(screenShareTrack);\r\n      setScreenShareTrack(null);\r\n      setIsActive(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LightTooltip title=\"Present your screen\">\r\n        <Button onClick={handleScreenShareEvent} id=\"other_bt\">\r\n          <i class=\"fab fa-chromecast\"></i>\r\n        </Button>\r\n      </LightTooltip>\r\n      {isActive && <LocalScreenSharingPreview stream={screenShareStream} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwitchToScreenSharingButton;\r\n","import React , {useState} from 'react'\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport {Button } from \"@material-ui/core\"\r\nimport {LightTooltip} from \"./Tooltip\"\r\n\r\n//toast notify utility\r\ntoast.configure();\r\n\r\nconst ShareLinkButton = (props) => {\r\n\r\n    const {roomId} = props;\r\n\r\n    //notification state.\r\n    const [notif , setNotif] = useState(false);\r\n    //timeout to prevent notification overlap when called many times.\r\n    function timeout(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    const notify = async() =>{\r\n\r\n        if(notif)return;\r\n        setNotif(true);\r\n        console.log(notif)\r\n        toast.dark(\"Meeting ID copied to clipboard\" , {\r\n        position: \"bottom-left\",\r\n        autoClose: 1400,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n        await timeout(1500);\r\n        setNotif(false)\r\n    }\r\n    return (\r\n        <LightTooltip title=\"Copy Room ID to clipboard\">\r\n            <CopyToClipboard text={String(roomId)}>\r\n            <Button id=\"other_bt\"\r\n            onClick={notify}>\r\n                <i class=\"fas fa-share-alt\"></i>\r\n            </Button>\r\n            </CopyToClipboard>\r\n        </LightTooltip>\r\n\r\n    )\r\n}\r\n\r\nexport default ShareLinkButton\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MicButton from \"./MicButton\";\r\nimport CameraButton from \"./CameraButton\";\r\nimport LeaveRoomButton from \"./LeaveRoomButton\";\r\nimport SwitchToScreenSharingButton from \"./SwitchToScreenSharingButton\";\r\nimport ShareLinkButton from \"./ShareLinkButton\";\r\nimport {\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\n//Omit screenshare feature for mobile devices.\r\nvar windowWidth =\r\n  window.screen.width < window.outerWidth\r\n    ? window.screen.width\r\n    : window.outerWidth;\r\nvar isSmall = windowWidth <= 960;\r\n\r\nconst VideoButtons = (props) => {\r\n  const { roomId, room} = props;\r\n  //console.log(\"a\",roomId);\r\n  return (\r\n    <>\r\n      <Grid container xs={12}  direction=\"row\" justify=\"space-evenly\">\r\n        <Grid item>\r\n          <Grid container xs={12} id=\"dock_bt\">\r\n            <MicButton room={room} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container xs={12} id=\"dock_bt\">\r\n            <CameraButton room={room}/>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item hidden={isSmall}>\r\n          <Grid container xs={12} id=\"dock_bt\">\r\n            <SwitchToScreenSharingButton room={room} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container xs={12} id=\"dock_bt\">\r\n            <ShareLinkButton roomId={roomId} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container xs={12} id=\"dock_bt\">\r\n            <LeaveRoomButton room={room} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(VideoButtons);\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nconst AudioTrack = ({ track }) => {\r\n  const trackRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const child = track.attach();\r\n    trackRef.current.classList.add(track.kind);\r\n    trackRef.current.appendChild(child);\r\n  }, []);\r\n\r\n  return <div className=\"track\" ref={trackRef}></div>;\r\n};\r\n\r\nexport default AudioTrack;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { LightTooltip } from \"../VideoDock/Tooltip\";\r\n\r\nvar windowWidth =\r\n  window.screen.width < window.outerWidth\r\n    ? window.screen.width\r\n    : window.outerWidth;\r\nvar isSmall = windowWidth <= 960;\r\n\r\nconst VideoTrack = ({ track, name, count }) => {\r\n  //nearly\r\n\r\n  let large = isSmall ? 95 : 55; //video portal widths\r\n  let medium = large / 2;\r\n  let small = large / 4;\r\n\r\n  //width and preview states for each video element.\r\n  const [width, setwidth] = useState(medium);\r\n\r\n  //twilio documented way to pass video streams into DOM.\r\n  const trackRef = useRef();\r\n  useEffect(() => {\r\n    const child = track.attach();\r\n    trackRef.current.classList.add(track.kind);\r\n    trackRef.current.appendChild(child);\r\n    const videosPortal = document.getElementById(\"videos_portal\");\r\n    if (isSmall) {\r\n      if (!videosPortal.classList.contains(\"videos_mobile_portal_styles\")) {\r\n        videosPortal.classList.add(\"videos_mobile_portal_styles\");\r\n      }\r\n    } else {\r\n      if (!videosPortal.classList.contains(\"videos_portal_styles\")) {\r\n        videosPortal.classList.add(\"videos_portal_styles\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  console.log(windowWidth);\r\n  const handleExpand = () => {\r\n    if (width === medium) setwidth(large);\r\n    else if (width === small) setwidth(medium);\r\n  };\r\n\r\n  const handleContract = () => {\r\n    if (width === large) setwidth(medium);\r\n    else if (!isSmall && width === medium) setwidth(small);\r\n  };\r\n\r\n\r\n  // Contains a single video Block , rendered directly to DOm\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div\r\n        id=\"video_player\"\r\n        style={{\r\n          width: String(width) + \"vw\",\r\n          height: String(width / 1.5) + \"vw\",\r\n        }}\r\n      >\r\n        <div ref={trackRef}></div>\r\n          <LightTooltip title={name}>\r\n            <p id=\"video_head\">{name}</p>\r\n          </LightTooltip>\r\n          <LightTooltip title=\"Expand Video\">\r\n            <p onClick={handleExpand} id=\"video_expand\">\r\n              <i class=\"fas fa-expand\"></i>\r\n            </p>\r\n          </LightTooltip>\r\n          <LightTooltip title=\"Contract Video\">\r\n            <p onClick={handleContract} id=\"video_contract\">\r\n              <i class=\"fas fa-compress\"></i>\r\n            </p>\r\n          </LightTooltip>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"videos_portal\")\r\n  );\r\n};\r\n\r\nexport default VideoTrack;\r\n","import React, { Component } from \"react\";\r\nimport AudioTrack from \"./AudioTrack\";\r\nimport VideoTrack from \"./VideoTrack\";\r\nimport { addMessageToMessenger } from \"../../../utils/twilioUtils\";\r\n\r\nclass Participant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const existingPublications = Array.from(\r\n      this.props.participant.tracks.values()\r\n    );\r\n    const existingTracks = existingPublications.map(\r\n      (publication) => publication.track\r\n    );\r\n    const nonNullTracks = existingTracks.filter((track) => track !== null);\r\n    this.state = {\r\n      tracks: nonNullTracks,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.localParticipant) {\r\n      this.props.participant.on(\"trackSubscribed\", (track) => {\r\n        if (track.kind === \"data\") {\r\n          track.on(\"message\", (data) => {\r\n            addMessageToMessenger(JSON.parse(data));\r\n          });\r\n        } else {\r\n          this.addTrack(track);\r\n        }\r\n      });\r\n\r\n      this.props.participant.on(\"trackUnpublished\", (track) => {\r\n        this.removeTrack(track);\r\n      });\r\n    }\r\n  }\r\n\r\n  addTrack(track) {\r\n    if (track) {\r\n      this.setState({\r\n        tracks: [...this.state.tracks, track],\r\n      });\r\n    }\r\n  }\r\n\r\n  removeTrack(track) {\r\n    if (track) {\r\n      const newTracks = this.state.tracks.filter(\r\n        (t) => t.name !== track.trackName\r\n      );\r\n\r\n      this.setState({\r\n        tracks: newTracks,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let userID = this.props.participant.identity;\r\n    let name = userID.slice(36, userID.length);\r\n\r\n    //extracting username for displaying as video header.\r\n    let count = 1;\r\n    this.state.tracks.forEach((track) => {\r\n      if (track.kind === \"video\") {\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"participant\" id={userID}>\r\n        {this.state.tracks.map((track) => {\r\n          if (track.kind === \"audio\") {\r\n            return <AudioTrack key={track} track={track} />;\r\n          }\r\n          if (track.kind === \"video\") {\r\n            return (\r\n              <VideoTrack key={track} track={track} name={name} count={count} />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Participant;\r\n","import React, { Component } from \"react\";\r\nimport Participant from \"./Participant\";\r\nimport { setParticipants } from \"../../../store/actions\";\r\nimport { store } from \"../../../store/store\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// contains server interaction functions with twilio API\r\n\r\n//utility to find if device is mobile.( different video render method)\r\nvar windowWidth =\r\n  window.screen.width < window.outerWidth\r\n    ? window.screen.width\r\n    : window.outerWidth;\r\nvar isSmall = windowWidth <= 960;\r\n\r\n//toast notify utility\r\ntoast.configure();\r\nconst notify = (str) => {\r\n  toast.dark(str, {\r\n    position: \"bottom-left\",\r\n    autoClose: 1700,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\n// Methods follow as per the twilio API documentation\r\n\r\nclass TwilioRoom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const remoteParticipants = Array.from(\r\n      this.props.room.participants.values()\r\n    );\r\n    this.state = {\r\n      remoteParticipants: remoteParticipants,\r\n    };\r\n    remoteParticipants.forEach((participant) => {\r\n      this.addParticipantToStore(participant);\r\n    });\r\n  }\r\n\r\n  // Define mount class of the participant.\r\n  componentDidMount() {\r\n    this.props.room.on(\"participantConnected\", (participant) =>\r\n      this.addParticipant(participant)\r\n    );\r\n\r\n    this.props.room.on(\"participantDisconnected\", (participant) => {\r\n      this.removeParticipant(participant);\r\n    });\r\n  }\r\n\r\n  addParticipantToStore(participant) {\r\n    const participants = store.getState().participants;\r\n    //check if the participant already exists\r\n    if (participants.find((p) => p.identity === participant.identity)) {\r\n      return;\r\n    } else {\r\n      const newParticipants = [...participants];\r\n      newParticipants.push({ identity: participant.identity });\r\n      store.dispatch(setParticipants(newParticipants));\r\n    }\r\n  }\r\n\r\n  //update state and notify if a person enters\r\n  addParticipant(participant) {\r\n    let name = `${participant.identity}`;\r\n    name = name.slice(36, name.length);\r\n    if (!isSmall) {\r\n      notify(name + \" has joined the room \");\r\n    }\r\n    this.addParticipantToStore(participant);\r\n    this.setState({\r\n      remoteParticipants: [...this.state.remoteParticipants, participant],\r\n    });\r\n  }\r\n\r\n  removeParticipantFromStore(participant) {\r\n    // find and erase participant from state.\r\n    const participants = store\r\n      .getState()\r\n      .participants.filter((p) => p.identity !== participant.identity);\r\n    store.dispatch(setParticipants(participants));\r\n  }\r\n\r\n  //update state and notify if a person leaves.\r\n  removeParticipant(participant) {\r\n    let name = `${participant.identity}`;\r\n    name = name.slice(36, name.length);\r\n    if (!isSmall) {\r\n      notify(name + \" has left the room \");\r\n    }\r\n    this.removeParticipantFromStore(participant);\r\n\r\n    //Update participant state.\r\n    this.setState({\r\n      remoteParticipants: this.state.remoteParticipants.filter(\r\n        (p) => p.identity !== participant.identity\r\n      ),\r\n    });\r\n  }\r\n\r\n  // render an array of twilio data tracks. (Participants)\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Participant\r\n          key={this.props.room.localParticipant.identity}\r\n          localParticipant\r\n          participant={this.props.room.localParticipant}\r\n          room={this.props.room}\r\n        />\r\n        {this.state.remoteParticipants.map((participant) => {\r\n          return (\r\n            <Participant key={participant.identity} participant={participant} />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TwilioRoom;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { connectToRoom } from \"../../utils/twilioUtils\";\r\nimport TwilioRoom from \"./TwilioRoom/TwilioRoom\";\r\n\r\n// use twilio API to set up streams\r\n\r\nconst Videos = ({ room, setRoom, roomId, twilioAccessToken }) => {\r\n\tuseEffect(() => {\r\n\t\tif (twilioAccessToken) {\r\n\t\t\tconnectToRoom(twilioAccessToken, roomId, setRoom);\r\n\t\t}\r\n\t}, [twilioAccessToken]);\r\n\r\n\treturn <div>{room && <TwilioRoom room={room} />}</div>;\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n\treturn {\r\n\t\t...state,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(Videos);\r\n","import React, { useState } from \"react\";\r\nimport VideoButtons from \"./VideoDock/VideoButtons\";\r\nimport Videos from \"./Videos\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// contains the video dock and the video elements\r\n\r\nconst VideoSection = () => {\r\n  const [room, setRoom] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" >\r\n        <Grid item xs={12}>\r\n          <div id=\"video_dock\" >\r\n            <VideoButtons room={room} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div id=\"video_container\">\r\n            <Videos room={room} setRoom={setRoom} />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoSection;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\n//function to display an individual block of message.\r\nconst Message = ({ author, content, sameAuthor, messageCreatedByMe }) => {\r\n\tconst authorText = messageCreatedByMe ? \"You\" : author;\r\n\r\n\t// Sets bubble style for user message and recieved message.\r\n\tconst MessageBubble = ({ type }) => {\r\n\t\treturn (\r\n\t\t\t<Grid container direction=\"row\">\r\n\t\t\t\t<Grid item xs={4} hidden={type === \"B\"} />\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t<Grid container direction=\"column\">\r\n\t\t\t\t\t\t{!sameAuthor && (\r\n\t\t\t\t\t\t\t<div id={\"chat_head_\" + type}>{authorText}</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div id={\"chat_bubble_\" + type}>{content}</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4} hidden={type === \"A\"} />\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\tif (messageCreatedByMe) return <MessageBubble type=\"A\" />;\r\n\telse return <MessageBubble type=\"B\" />;\r\n};\r\n\r\n//function to display and array of message blocks\r\nconst Messages = ({ messages, identity }) => {\r\n\t//update scroll whenever a new message is recieved or made.\r\n\tuseEffect(() => {\r\n\t\tvar element = document.getElementById(\"chat_bubble_block\");\r\n\t\telement.scrollTop = element.scrollHeight;\r\n\t});\r\n\treturn (\r\n\t\t<FlipMove>\r\n\t\t\t{messages.map((message, index) => {\r\n\t\t\t\tconst sameAuthor =\r\n\t\t\t\t\tindex > 0 &&\r\n\t\t\t\t\tmessage.identity === messages[index - 1].identity;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div id={index}>\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tauthor={message.identity}\r\n\t\t\t\t\t\t\tcontent={message.content}\r\n\t\t\t\t\t\t\tsameAuthor={sameAuthor}\r\n\t\t\t\t\t\t\tmessageCreatedByMe={message.messageCreatedByMe}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</FlipMove>\r\n\t);\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n\treturn {\r\n\t\t...state,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {};\r\n\r\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(Messages);\r\n","export default __webpack_public_path__ + \"static/media/sendMessageButton.21b28e18.svg\";","import React, { useState } from \"react\";\r\nimport SendMessageButton from \"../../resources/images/sendMessageButton.svg\";\r\nimport { sendMessageUsingDataChannel } from \"../../utils/twilioUtils\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { LightTooltip } from \"../VideoSection/VideoDock/Tooltip\";\r\n\r\nconst NewMessage = () => {\r\n  //current message input state\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (message === \"\") return;\r\n    //send message and scroll down immediately after that.\r\n    await sendMessageUsingDataChannel(message, true);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleKeyPressed = (event) => {\r\n    //handle enter key in computers\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const handleTextChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container direction=\"row\">\r\n        <Grid item xs={12}>\r\n          <textarea\r\n            id=\"chat_input\"\r\n            value={message}\r\n            onChange={handleTextChange}\r\n            placeholder=\"Type your message...\"\r\n            type=\"text\"\r\n            onKeyDown={handleKeyPressed}\r\n          />\r\n        </Grid>\r\n\r\n          <LightTooltip title=\"Send Message\">\r\n            <div id=\"chat_util\" src={SendMessageButton} onClick={sendMessage}>\r\n              <i class=\"fas fa-paper-plane\"></i>\r\n            </div>\r\n          </LightTooltip>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n","import React from \"react\";\r\nimport Messages from \"./Messages\";\r\nimport NewMessage from \"./NewMessage\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst ChatSection = (props) => {\r\n\tlet wid = props.mobile ? \"100vw\" : \"20vw\";\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid item xs={12} id=\"chat_header\">\r\n\t\t\t\tMessages\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} id=\"chat_bubble_block\">\r\n\t\t\t\t<Messages />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} id=\"chat_input_block\" style={{ width: wid }}>\r\n\t\t\t\t<NewMessage />\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ChatSection;\r\n","import React, { useState } from \"react\";\r\nimport ParticipantsSection from \"./ParticipantsSection/ParticipantsSection\";\r\nimport VideoSection from \"./VideoSection/VideoSection\";\r\nimport ChatSection from \"./ChatSection/ChatSection\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\n//split the page into 3 sections for easy use in mobile\r\n//added a bottom navbar\r\n\r\nconst RoomPageMobile = () => {\r\n  //Page Display state\r\n  const [page, setPage] = useState(\"video\");\r\n\r\n  const NavBar = () =>{\r\n    return (<div id=\"navbar\">\r\n    <Button id=\"nav_bt\" onClick={() => setPage(\"participant\")}>\r\n      <i class=\"fas fa-address-card\"></i>\r\n    </Button>\r\n    <Button id=\"nav_bt\" onClick={() => setPage(\"video\")}>\r\n      <i class=\"fas fa-border-all\"></i>\r\n    </Button>\r\n    <Button id=\"nav_bt\" onClick={() => setPage(\"message\")}>\r\n      <i class=\"fas fa-comment-alt\"></i>\r\n    </Button>\r\n  </div>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\" id=\"page\" style={{ height: \"97vh\" }}>\r\n\r\n        <Grid item xs={12} hidden={page !== \"participant\"}>\r\n          <div id=\"participant\">\r\n            <ParticipantsSection />\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} hidden={page !== \"video\"}>\r\n          <div id=\"room\">\r\n            <VideoSection />\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} hidden={page !== \"message\"}>\r\n          <div id=\"chat\">\r\n            <ChatSection mobile={true} />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <NavBar />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoomPageMobile;\r\n","import React from \"react\";\r\nimport ParticipantsSection from \"./ParticipantsSection/ParticipantsSection\";\r\nimport VideoSection from \"./VideoSection/VideoSection\";\r\nimport ChatSection from \"./ChatSection/ChatSection\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst RoomPageLarge = () => {\r\n  return (\r\n    <Grid container direction=\"row\" id=\"page\" style={{height: \"100vh\"}}>\r\n      <Grid item style={{ width: \"20%\" }} >\r\n        <div id=\"participant\"><ParticipantsSection /></div>\r\n      </Grid>\r\n\r\n      <Grid item style={{ width: \"60%\" }}>\r\n        <div id=\"room\"><VideoSection /></div>\r\n      </Grid>\r\n\r\n      <Grid item style={{ width: \"20%\"}}>\r\n        <div id=\"chat\"> <ChatSection mobile={false} /></div>\r\n      </Grid>\r\n      \r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RoomPageLarge;\r\n","import React from \"react\";\r\nimport \"../resources/css/Overlay.css\"\r\n\r\n//Loader animation overlay before video meeting begins.\r\n//controlled using a ASYNC function\r\n\r\nconst Overlay = () => {\r\n  return (\r\n    <div className=\"overlay_container\">\r\n      <div className=\"sk-folding-cube\">\r\n      <div className=\"sk-cube1 sk-cube\"></div>\r\n      <div className=\"sk-cube2 sk-cube\"></div>\r\n      <div className=\"sk-cube4 sk-cube\"></div>\r\n      <div className=\"sk-cube3 sk-cube\"></div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import React, { useEffect} from \"react\";\r\nimport RoomPageMobile from \"./RoomPageMobile\";\r\nimport RoomPageLarge from \"./RoomPageLarge\";\r\nimport { connect } from \"react-redux\";\r\nimport { setTwilioAccessToken } from \"../store/actions\";\r\nimport { getTokenFromTwilio } from \"../utils/twilioUtils\";\r\nimport Overlay from \"./Overlay\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\n\r\nconst RoomPage = (props) => {\r\n  const { identity, setTwilioAccessTokenAction, roomId, showOverlay } = props;\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!identity || !roomId) {\r\n      history.push(\"/\");\r\n    }\r\n    getTokenFromTwilio(setTwilioAccessTokenAction, identity);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {showOverlay && <Overlay />}\r\n      <Hidden smDown>\r\n        <RoomPageLarge />\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <RoomPageMobile />\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n// Obtain and update twilio API states in redux.\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    setTwilioAccessTokenAction: (token) =>\r\n      dispatch(setTwilioAccessToken(token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapActionsToProps)(RoomPage);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { \r\n  Button,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\n\r\n// component containes three buttons to handle the initial event\r\n// Either Host , Join or enter the Channel Section.\r\n\r\n\r\nconst HomeButtons = () => {\r\n\r\n  let history = useHistory();\r\n\r\n  // a single button grid item\r\n  const Path = ({next , text}) =>{\r\n    return(\r\n      <Grid item>\r\n        <Button \r\n        id=\"bt_default\"\r\n        onClick = {()=>history.push(next)}>\r\n          {text}\r\n        </Button>\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Grid \r\n      container \r\n      xs={12}\r\n      alignItems=\"center\"\r\n      direction=\"column\">\r\n        <Path next=\"/channel\" text=\"Channel\"/> \r\n        <Path next=\"/join-room?host=true\" text=\"Host a Meeting\"/>\r\n        <Path next=\"/join-room\" text=\"Join a Meeting\"/>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeButtons;\r\n","export default __webpack_public_path__ + \"static/media/home6.0f2730db.svg\";","export default __webpack_public_path__ + \"static/media/home5.1dfc7a74.svg\";","import React, { useEffect } from \"react\";\r\nimport HomeButtons from \"./HomeButtons\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIsRoomHost , setTwilioAccessToken , setRoomId , setIdentity} from \"../store/actions\";\r\nimport \"../resources/css/IntroductionPage.css\";\r\nimport home6 from \"../resources/images/home6.svg\";\r\nimport home5 from \"../resources/images/home5.svg\";\r\nimport home7 from \"../resources/images/home7.svg\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n/* \r\nBasic Intro Page Grid layout with responsiveness handled for mobiles \r\nxs is for small devices , md for medium and above.\r\n*/\r\n\r\nconst IntroductionPage = (props) => {\r\n  useEffect(() => {\r\n    //Reset user states when intropage is opened. afte refreshing.\r\n    props.setIsRoomHostAction(false);\r\n    props.setTwilioAccessTokenAction(null);\r\n    props.setRoomIdAction(null);\r\n    props.setIdentityAction(null);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid container id=\"whole\">\r\n        {/**row1 */}\r\n        <Grid item xs={11} md={8} id=\"height40\">\r\n          <img src={home6} id=\"top_left_img\" />\r\n        </Grid>\r\n        <Grid item xs={1} md={4} id=\"height40\"/>\r\n        {/**row2 */}\r\n        <Grid item xs={1} md={4} id=\"height20\"/>\r\n        <Grid item xs={10} md={4} id=\"height20\">\r\n          <HomeButtons />\r\n        </Grid>\r\n        <Grid item xs={1} md={4} id=\"height20\"/>\r\n        {/**row3 */}\r\n        <Grid item xs={1} md={4} id=\"height40\"/>\r\n        <Grid item xs={11} md={8} id=\"height40\">\r\n          <img src={home5} id=\"bottom_right_img\"></img>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setIsRoomHostAction: (isRoomHost) => dispatch(setIsRoomHost(isRoomHost)),\r\n    setTwilioAccessTokenAction: (accessToken) => dispatch(setTwilioAccessToken(accessToken)),\r\n    setRoomIdAction:(room) => dispatch(setRoomId(room)),\r\n    setIdentityAction:(identity)=>dispatch(setIdentity(identity)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(IntroductionPage);\r\n","export default __webpack_public_path__ + \"static/media/home7.be11a008.svg\";","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDrP3zynQU9sMbPDV3pL-L0BdXUh2B7bTk\",\r\n  authDomain: \"teams-clone-chat.firebaseapp.com\",\r\n  databaseURL: \"https://teams-clone-chat-default-rtdb.firebaseio.com\",\r\n  projectId: \"teams-clone-chat\",\r\n  storageBucket: \"teams-clone-chat.appspot.com\",\r\n  messagingSenderId: \"587427799414\",\r\n  appId: \"1:587427799414:web:02c1490be21868449b1a57\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, provider };\r\n","export default __webpack_public_path__ + \"static/media/login3.8bac2834.svg\";","import { Button, Grid, Hidden } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport chat from \"../../resources/images/chat.svg\";\r\nimport join4 from \"../../resources/images/join4.svg\";\r\nimport login3 from \"../../resources/images/login3.svg\";\r\n\r\n// google sign in method powered by firebase auth system\r\nconst Login = () => {\r\n\tconst signin = () => {\r\n\t\tauth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n\t};\r\n\r\n\tconst Images = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Hidden smDown>\r\n\t\t\t\t\t<img src={chat} id=\"img1\"></img>\r\n\t\t\t\t\t<img src={join4} id=\"img2\"></img>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden mdUp>\r\n\t\t\t\t\t<img src={login3} id=\"img_mobile\"></img>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tconst Title = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Grid item xs={1} md={4}></Grid>\r\n\t\t\t\t<Grid item xs={10} md={4} id=\"title_container\">\r\n\t\t\t\t\t<div id=\"title\">Login</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1} md={4}></Grid>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tlet history = useHistory();\r\n\r\n\tconst Buttons = () => {\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Grid container xs={12} direction=\"row\">\r\n\t\t\t\t\t<Grid item xs={1} md={4}></Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={10}\r\n\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\tid=\"content\"\r\n\t\t\t\t\t\tstyle={{ borderRadius: \"0px 0px 5px 5px\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div id=\"button_container\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={signin} id=\"bt1\">\r\n\t\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid=\"bt2\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => history.push(\"/\")}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tcancel\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1} md={4}></Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div id=\"join-room-page\">\r\n\t\t\t\t<Images />\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Title />\r\n\t\t\t\t\t<Buttons />\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setChatId, setChatName , setPage} from \"../../store/actions\";\r\nimport { db } from \"../firebase\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst SidebarChat = (props) => {\r\n  const { id, chatName, setChatIdAction, setChatNameAction , setPageAction } = props;\r\n  const [chatInfo, setChatInfo] = useState(\"\");\r\n\r\n  // on component mount fetch room by id and get its messages\r\n  useEffect(() => {\r\n    db.collection(\"chats\")\r\n      .doc(id)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setChatInfo(snapshot.docs.map((doc) => doc.data()))\r\n      );\r\n  }, [id]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      xs={12}\r\n      onClick={() => {\r\n        setChatIdAction(id);\r\n        setChatNameAction(chatName);\r\n        setPageAction(true);\r\n      }}\r\n      id=\"channel_bar\"\r\n    >\r\n      <Grid item xs={12} id=\"channel_name\">\r\n        {chatName}\r\n      </Grid>\r\n      <Grid item xs={12} id=\"last_message\">\r\n      {(chatInfo[0])?(chatInfo[0]?.displayName+ \" : \" + chatInfo[0]?.message):\"\"}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChatIdAction: (chatId) => dispatch(setChatId(chatId)),\r\n    setChatNameAction: (chatName) => dispatch(setChatName(chatName)),\r\n    setPageAction: (page) => dispatch(setPage(page))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SidebarChat);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SidebarChat from \"./SidebarChat.js\";\r\nimport { db, auth } from \"../firebase\";\r\nimport { setChatId, setChatName } from \"../../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse , Button  ,Grid , Avatar } from \"@material-ui/core\";\r\nimport { LightTooltip } from \"../../RoomPage/VideoSection/VideoDock/Tooltip\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport { Flip } from \"react-toastify\";\r\n\r\nconst Sidebar = (props) => {\r\n  const { user, setChatIdAction, setChatNameAction } = props;\r\n  //State management\r\n  const [chats, setChats] = useState([]);\r\n  const [rooms, setrooms] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [opened, setOpened] = useState(false);\r\n  const [channel, setChannel] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // on component mount fetch chat rooms names\r\n  useEffect(() => {\r\n    db.collection(\"chats\").onSnapshot((snapshot) =>\r\n      setChats(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n    db.collection(user.email).onSnapshot((snapshot) =>\r\n      setrooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.data().id,\r\n          data: doc.data().data,\r\n        }))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const addChat = () => {\r\n    // add new chat to firebase\r\n    if (channel && password) {\r\n      let added = false;\r\n      chats.forEach((x) => {\r\n        if (x.data.chatName === channel) {\r\n          added = true;\r\n        }\r\n      });\r\n      if (!added) {\r\n        db.collection(\"chats\").add({\r\n          chatName: channel,\r\n          password: password,\r\n          host: user.email,\r\n        });\r\n        alert(\"Channel created , Join the channel to add it to your Channel feed\");\r\n      } else alert(\"This Channel Name already exists\");\r\n    } else alert(\"Both credentials are required\");\r\n    setOpen(false);\r\n    setChannel(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const joinChat = () => {\r\n    let joined = false;\r\n    if (channel && password) {\r\n      rooms.forEach((x) => {\r\n        if (x.data.chatName === channel) {\r\n          joined = true;\r\n        }\r\n      });\r\n      if (!joined) {\r\n        chats.forEach((x) => {\r\n          if (\r\n            !joined &&\r\n            x.data.chatName === channel &&\r\n            x.data.password === password\r\n          ) {\r\n            db.collection(user.email).add(x);\r\n            joined = true;\r\n          }\r\n        });\r\n        if (!joined) {\r\n          alert(\"Invalid Channel Credentials\");\r\n        }\r\n      } else alert(\"You are already a member of this Channel\");\r\n    } else alert(\"Both credentials are required\");\r\n    setOpen(false);\r\n    setChannel(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const logOut = () => {\r\n    //Clear local user channel states before logout.\r\n    setChatIdAction(\"\");\r\n    setChatNameAction(\"\");\r\n    auth.signOut();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"sidebar\">\r\n        <div id=\"sidebar__header\">\r\n          <div onClick={logOut}>\r\n            <Avatar src={user.photo} />\r\n            <small type=\"submit\">Logout</small>\r\n          </div>\r\n          <LightTooltip title=\"Join / Create Room\">\r\n            <div\r\n              id=\"sidebar__create\"\r\n              onClick={(e) => {\r\n                setOpen(!open);\r\n                setOpened(true);\r\n              }}\r\n            >\r\n              <AddIcon />\r\n            </div>\r\n          </LightTooltip>\r\n        </div>\r\n        \r\n        {/** Hidden Menu triggered when \"+\" is clicked */}\r\n        <Collapse hidden={!opened} in={open} id=\"channel_menu\">\r\n          <Grid container xs={12} justify=\"center\" direction=\"row\">\r\n\r\n            {/**Input to enter Channel name */}\r\n            <Grid item xs={12} justify=\"center\">\r\n              <input\r\n                id=\"sidebar_input\"\r\n                placeholder=\"Channel Name\"\r\n                value={channel}\r\n                onChange={(e) => setChannel(e.target.value)}\r\n              />\r\n            </Grid>\r\n\r\n            {/**Input to enter password */}\r\n            <Grid item xs={12}>\r\n              <input\r\n                id=\"sidebar_input\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n\r\n            {/**Create channel button */}\r\n            <Grid item xs={12}>\r\n              <Grid container xs={12} justify=\"center\">\r\n                <Button onClick={addChat} id=\"sidebar_bt\">\r\n                  Create\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/**Join channel button */}\r\n            <Grid item xs={12}>\r\n              <Grid container xs={12} justify=\"center\">\r\n                <Button onClick={joinChat} id=\"sidebar_bt\">\r\n                  Join\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Collapse>\r\n\r\n        <div className=\"sidebar__chats\">\r\n          <div id=\"channel_header\">Your Channels</div>\r\n          <FlipMove>\r\n          {rooms.map(({ id, data , index }) => (\r\n            <div id={index}>\r\n              <SidebarChat key={id} id={id} chatName={data.chatName} />\r\n            </div>\r\n          ))}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChatIdAction: (chatId) => dispatch(setChatId(chatId)),\r\n    setChatNameAction: (chatName) => dispatch(setChatName(chatName)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(Sidebar);\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { forwardRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Collapse, Button } from \"@material-ui/core\";\r\nimport { db } from \"../firebase\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst Message = forwardRef(\r\n\t(\r\n\t\t{\r\n\t\t\tuser,\r\n\t\t\tid,\r\n\t\t\tchatId,\r\n\t\t\tcontents: { timestamp, displayName, email, message, photo, uid },\r\n\t\t},\r\n\t\tref\r\n\t) => {\r\n\t\tconst [show, setShow] = useState(false);\r\n\t\tconst showdetail = () => {\r\n\t\t\tsetShow(!show);\r\n\t\t};\r\n\t\tconst author = user.displayName === displayName ? \"You\" : displayName;\r\n\r\n\t\tconst messageDelete = () => {\r\n\t\t\tlet temp = { timestamp, displayName, email, message, photo, uid };\r\n\t\t\ttemp.message = \"Message Deleted\";\r\n\t\t\tdb.collection(\"chats\")\r\n\t\t\t\t.doc(chatId)\r\n\t\t\t\t.collection(\"messages\")\r\n\t\t\t\t.doc(id)\r\n\t\t\t\t.update(temp);\r\n\t\t};\r\n\r\n\t\tlet hiddenDetails = (\r\n\t\t\t<Collapse in={show && message !== \"Message Deleted\"} id=\"chat_info\">\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Avatar className=\"message__photo\" src={photo} />\r\n\t\t\t\t<br />\r\n\t\t\t\t{email}\r\n\t\t\t\t<br />\r\n\t\t\t\t{new Date(timestamp?.toDate()).toLocaleString()}\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div hidden={author !== \"You\"}>\r\n\t\t\t\t\t<Button onClick={messageDelete}>\r\n\t\t\t\t\t\t<i class=\"far fa-trash-alt\"></i>Delete\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<CopyToClipboard text={String(message)}>\r\n\t\t\t\t\t<Button onClick={() => alert(\"Message copied to Clipboard\")}>\r\n\t\t\t\t\t\t<i class=\"far fa-copy\"></i> Copy\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</Collapse>\r\n\t\t);\r\n\r\n\t\tif (author === \"You\") {\r\n\t\t\t// Message Block which are sent by the user.\r\n\t\t\treturn (\r\n\t\t\t\t<div ref={ref}>\r\n\t\t\t\t\t<Grid container direction=\"row\">\r\n\t\t\t\t\t\t<Grid item xs={4}></Grid>\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\r\n\t\t\t\t\t\t\t\t<div id=\"message_bubble_A\" onClick={showdetail}>\r\n\t\t\t\t\t\t\t\t\t<div id=\"message_head_A\">{author}</div>\r\n\t\t\t\t\t\t\t\t\t{message}\r\n\t\t\t\t\t\t\t\t\t{hiddenDetails}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t// Message Block which are recieved from other users.\r\n\t\t\treturn (\r\n\t\t\t\t<div ref={ref}>\r\n\t\t\t\t\t<Grid container direction=\"row\">\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\r\n\t\t\t\t\t\t\t\t<div id=\"message_bubble_B\" onClick={showdetail}>\r\n\t\t\t\t\t\t\t\t\t<div id=\"message_head_B\">{author}</div>\r\n\t\t\t\t\t\t\t\t\t{message}\r\n\t\t\t\t\t\t\t\t\t{hiddenDetails}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={4}></Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n);\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n\treturn {\r\n\t\t...state,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, null)(Message);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport { setPage } from \"../../store/actions\";\r\nimport { Grid, Button, Hidden } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\n\r\nconst Chat = (props) => {\r\n\tconst { user, chatName, chatId, setPageAction } = props;\r\n\tconst chatRef = useRef(null);\r\n\tconst [input, setInput] = useState(\"\");\r\n\tconst [messages, setMessages] = useState([]);\r\n\r\n\t// on component mount fetch messages of selected room\r\n\tuseEffect(() => {\r\n\t\tif (chatId) {\r\n\t\t\tdb.collection(\"chats\")\r\n\t\t\t\t.doc(chatId)\r\n\t\t\t\t.collection(\"messages\")\r\n\t\t\t\t.orderBy(\"timestamp\", \"asc\")\r\n\t\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\t\tsetMessages(\r\n\t\t\t\t\t\tsnapshot.docs.map((doc) => ({\r\n\t\t\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t\t\tdata: doc.data(),\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//scroll down when a new message pops in.\r\n\t\t\t\t\tvar element = document.getElementById(\"chat__messages\");\r\n\t\t\t\t\telement.scrollTop = element.scrollHeight;\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [chatId]);\r\n\r\n\tconst sendMessage = (e) => {\r\n\t\t// firebase operation - add message and info to firebase\r\n\t\tif (input === \"\") return;\r\n\t\tdb.collection(\"chats\").doc(chatId).collection(\"messages\").add({\r\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t\tmessage: input,\r\n\t\t\tuid: user.uid,\r\n\t\t\tphoto: user.photo,\r\n\t\t\temail: user.email,\r\n\t\t\tdisplayName: user.displayName,\r\n\t\t});\r\n\t\t// target the empty div to trigger chat scroll to last msg\r\n\t\tvar element = document.getElementById(\"chat__messages\");\r\n\t\telement.scrollTop = element.scrollHeight;\r\n\t\tsetInput(\"\");\r\n\t};\r\n\r\n\tconst handleKeyPressed = (event) => {\r\n\t\t//handle enter key in computers\r\n\t\tif (event.key === \"Enter\") {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tsendMessage();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"chat\">\r\n\t\t\t{/**Opens Host page in new window*/}\r\n\t\t\t<Link to=\"join-room?host=true\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t<Button id=\"video_action\">Host</Button>\r\n\t\t\t</Link>\r\n\r\n\t\t\t{/**Open Join Page in new window*/}\r\n\t\t\t<Link to=\"join-room\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t<Button id=\"join_action\">Join</Button>\r\n\t\t\t</Link>\r\n\r\n\t\t\t{/** Back button only for mobile devices*/}\r\n\t\t\t<Hidden mdUp>\r\n\t\t\t\t<Button id=\"back_action\" onClick={() => setPageAction(false)}>\r\n\t\t\t\t\tBack\r\n\t\t\t\t</Button>\r\n\t\t\t</Hidden>\r\n\r\n\t\t\t<div className=\"chat__header\">\r\n\t\t\t\t<div id=\"header_text\">\r\n\t\t\t\t\tChannel <br /> <span className=\"chat__name\">{chatName}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/**Renders array of chat messages from all users in database*/}\r\n\t\t\t<div id=\"chat__messages\">\r\n\t\t\t\t<FlipMove>\r\n\t\t\t\t\t{messages.map(({ id, data }) => (\r\n\t\t\t\t\t\t<div id={id}>\r\n\t\t\t\t\t\t\t<Message key={id} id={id} channel={chatId} contents={data} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</FlipMove>\r\n\t\t\t\t<div ref={chatRef} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<Grid container xs={12} direction=\"row\" id=\"message_input_block\">\r\n\t\t\t\t\t{/**Chat input block*/}\r\n\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid=\"message_input\"\r\n\t\t\t\t\t\t\tdisabled={!chatId}\r\n\t\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\t\tonChange={(e) => setInput(e.target.value)}\r\n\t\t\t\t\t\t\tonKeyDown={handleKeyPressed}\r\n\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t!chatId ? \"Please select a Channel first\" : \"Type a new message\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{/** Chat submit button*/}\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<div id=\"message_util\" onClick={sendMessage}>\r\n\t\t\t\t\t\t\t<i class=\"fas fa-paper-plane\"></i>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n\treturn {\r\n\t\t...state,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetPageAction: (page) => dispatch(setPage(page)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(Chat);\r\n","import React, { useEffect , useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUser} from \"../store/actions\";\r\nimport Login from \"./login/Login\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport Chat from \"./chat/Chat\";\r\nimport { auth } from \"./firebase\";\r\nimport { Grid, Hidden , Collapse} from \"@material-ui/core\";\r\n\r\n\r\nconst ChannelPage = (props) => {\r\n  const { setUserAction, user , page } = props;\r\n  useEffect(() => {\r\n    // once component mount activate firebase listener and update redux store with user info\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        setUserAction({\r\n          uid: authUser.uid,\r\n          photo: authUser.photoURL,\r\n          email: authUser.email,\r\n          displayName: authUser.displayName,\r\n          rooms: [],\r\n        });\r\n      } else {\r\n        setUserAction(\"\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <>\r\n        <Hidden smDown>\r\n          <div>\r\n            <Grid container direction=\"row\" xs={12}>\r\n              <Grid item style={{ width: \"20%\" }}>\r\n                <Sidebar user={user} />\r\n              </Grid>\r\n              <Grid item style={{ width: \"80%\" }}>\r\n                <Chat user={user} />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Hidden>\r\n\r\n        {/* Mobile version */}\r\n        <Hidden mdUp>\r\n\r\n        <div>\r\n          <Grid container direction=\"row\" xs={12}>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <Sidebar user={user} />\r\n            </Grid>\r\n            <Grid item style={{ width: \"100%\" , \"position\":\"absolute\" }} >\r\n                <Collapse in={page}>\r\n                <div ><Chat user={user} /></div>\r\n                </Collapse>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Hidden>\r\n      </>\r\n      ) : (\r\n        <Login />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUserAction: (user) => dispatch(setUser(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(ChannelPage);\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport JoinRoomPage from \"./JoinRoomPage/JoinRoomPage\";\r\nimport RoomPage from \"./RoomPage/RoomPage\";\r\nimport IntroductionPage from \"./IntroductionPage/IntroductionPage\";\r\nimport ChannelPage from \"./ChannelPage/ChannelPage\"\r\nimport { Fab } from \"@material-ui/core\";\r\nimport { LightTooltip } from \"./RoomPage/VideoSection/VideoDock/Tooltip\";\r\n\r\n\r\nimport \"./resources/css/App.css\";\r\nimport \"./resources/css/ChatSection.css\";\r\nimport \"./resources/css/IntroductionPage.css\";\r\nimport \"./resources/css/JoinRoomPage.css\";\r\nimport \"./resources/css/Overlay.css\";\r\nimport \"./resources/css/RoomPage.css\";\r\nimport \"./resources/css/VideoSection.css\";\r\nimport \"./resources/css/ParticipantSection.css\";\r\nimport \"./resources/css/ChannelChat.css\";\r\nimport \"./resources/css/ChannelMessage.css\";\r\nimport \"./resources/css/ChannelSidebar.css\";\r\nimport \"./resources/css/ChannelSidebarContent.css\";\r\n\r\n\r\n\r\nfunction App() {\r\n  //Theme states \r\n  const [theme, setTheme] = useState(\"theme_default\");\r\n  const handleChange = () => {\r\n    if (theme === \"theme_default\") setTheme(\"theme_dark\");\r\n    else setTheme(\"theme_default\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/**Global theme changing hover button */}\r\n      <div className={theme} id=\"main\">\r\n        <LightTooltip title=\"Change Theme\">\r\n          <Fab onClick={handleChange} id=\"themer\">\r\n          </Fab>\r\n        </LightTooltip>\r\n\r\n        {/**All routing pages in the application */}\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/channel\">\r\n              <ChannelPage/>\r\n            </Route>\r\n            <Route path=\"/join-room\">\r\n              <JoinRoomPage />\r\n            </Route>\r\n            <Route path=\"/room\">\r\n              <RoomPage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <IntroductionPage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}